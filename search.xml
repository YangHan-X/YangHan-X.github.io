<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title></title>
      <link href="/2024/07/04/QT-%E8%87%AA%E5%AE%9A%E4%B9%89%E5%9B%BE%E5%85%83/"/>
      <url>/2024/07/04/QT-%E8%87%AA%E5%AE%9A%E4%B9%89%E5%9B%BE%E5%85%83/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://jsd.onmicrosoft.cn/npm/hexo-theme-a4@latest/source/css/lightgallery.min.css" /><div class=".article-gallery"><h1 id="定制化图元"><a href="#定制化图元" class="headerlink" title="定制化图元"></a>定制化图元</h1><h2 id="CustomGraphicRectItem-h"><a href="#CustomGraphicRectItem-h" class="headerlink" title="CustomGraphicRectItem.h"></a>CustomGraphicRectItem.h</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> CUSTOMGRAPHICRECTITEM_H</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> CUSTOMGRAPHICRECTITEM_H</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QGraphicsItem&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QIcon&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QPainter&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QBrush&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QPixmap&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">b_item</span> &#123;</span><br><span class="line">    QIcon icon;</span><br><span class="line">    QString text1;</span><br><span class="line">    QString text2;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CustomGraphicRectItem</span> : <span class="keyword">public</span> QObject, <span class="keyword">public</span> QGraphicsItem</span><br><span class="line">&#123;</span><br><span class="line">    Q_OBJECT</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">explicit</span> <span class="title">CustomGraphicRectItem</span><span class="params">(QString topText, QList&lt;QList&lt;b_item&gt;&gt; dataList, QGraphicsItem *parent = <span class="literal">nullptr</span>)</span></span>;</span><br><span class="line">    ~<span class="built_in">CustomGraphicRectItem</span>();</span><br><span class="line"></span><br><span class="line">    <span class="function">QRectF <span class="title">boundingRect</span><span class="params">()</span> <span class="type">const</span> <span class="keyword">override</span></span>;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">paint</span><span class="params">(QPainter *painter, <span class="type">const</span> QStyleOptionGraphicsItem *option, QWidget *widget = <span class="literal">nullptr</span>)</span> <span class="keyword">override</span></span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">totalHeight</span><span class="params">()</span> <span class="type">const</span></span>;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">setTotalHeight</span><span class="params">(<span class="type">int</span> totalHeight)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="type">int</span> m_baseWidth;</span><br><span class="line">    <span class="type">int</span> m_baseHeight;</span><br><span class="line">    <span class="type">int</span> m_totalHeight;</span><br><span class="line">    QString m_topText;</span><br><span class="line">    QList&lt;QList&lt;b_item&gt;&gt; m_dataList;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span> <span class="comment">// CUSTOMGRAPHICRECTITEM_H</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="CustomGraphicRectItem-cpp"><a href="#CustomGraphicRectItem-cpp" class="headerlink" title="CustomGraphicRectItem.cpp"></a>CustomGraphicRectItem.cpp</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;CustomGraphicRectItem.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QDebug&gt;</span></span></span><br><span class="line"></span><br><span class="line">CustomGraphicRectItem::<span class="built_in">CustomGraphicRectItem</span>(QString topText, QList&lt;QList&lt;b_item&gt;&gt; dataList, QGraphicsItem *parent) :</span><br><span class="line">    <span class="built_in">QGraphicsItem</span>(parent), <span class="built_in">m_baseWidth</span>(<span class="number">150</span>), <span class="built_in">m_baseHeight</span>(<span class="number">30</span>), <span class="built_in">m_totalHeight</span>(<span class="number">30</span>), <span class="built_in">m_topText</span>(topText), <span class="built_in">m_dataList</span>(dataList)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">for</span>(QList&lt;b_item&gt; &amp;row : dataList)</span><br><span class="line">    &#123;</span><br><span class="line">        m_totalHeight += row.<span class="built_in">size</span>() * m_baseHeight;</span><br><span class="line">        <span class="built_in">qDebug</span>() &lt;&lt; row.<span class="built_in">size</span>() &lt;&lt; m_totalHeight;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">qDebug</span>() &lt;&lt; <span class="string">&quot;矩形总高度：&quot;</span> &lt;&lt; m_totalHeight;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">CustomGraphicRectItem::~<span class="built_in">CustomGraphicRectItem</span>()</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">QRectF <span class="title">CustomGraphicRectItem::boundingRect</span><span class="params">()</span> <span class="type">const</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">QRectF</span>(<span class="number">0</span>, <span class="number">0</span>, m_baseWidth, m_totalHeight);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">CustomGraphicRectItem::paint</span><span class="params">(QPainter *painter, <span class="type">const</span> QStyleOptionGraphicsItem *option, QWidget *widget)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    QRect topRect = <span class="built_in">QRect</span>(<span class="number">0</span>, <span class="number">0</span>, m_baseWidth, m_baseHeight);</span><br><span class="line">    painter-&gt;<span class="built_in">setBrush</span>(<span class="built_in">QBrush</span>(Qt::yellow));</span><br><span class="line">    painter-&gt;<span class="built_in">drawRect</span>(topRect);</span><br><span class="line">    painter-&gt;<span class="built_in">drawText</span>(topRect, Qt::AlignCenter, m_topText);</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> curHeight = m_baseHeight;</span><br><span class="line">    <span class="type">int</span> cellHeight = <span class="number">0</span>;</span><br><span class="line">    painter-&gt;<span class="built_in">setBrush</span>(<span class="built_in">QBrush</span>(Qt::lightGray));</span><br><span class="line">    <span class="keyword">for</span>(QList&lt;b_item&gt; &amp;row : m_dataList)</span><br><span class="line">    &#123;</span><br><span class="line">        cellHeight = row.<span class="built_in">size</span>() * m_baseHeight;</span><br><span class="line">        QRect cellRect = <span class="built_in">QRect</span>(<span class="number">0</span>, curHeight, m_baseWidth, cellHeight);</span><br><span class="line">        painter-&gt;<span class="built_in">drawRect</span>(cellRect);</span><br><span class="line">        <span class="type">int</span> drawHeight = curHeight;</span><br><span class="line">        <span class="keyword">for</span>(b_item &amp;item : row)</span><br><span class="line">        &#123;</span><br><span class="line">            QRect cellLeftRect = <span class="built_in">QRect</span>((m_baseHeight - <span class="number">16</span>) * <span class="number">0.5</span>, drawHeight + (m_baseHeight - <span class="number">16</span>) * <span class="number">0.5</span>, <span class="number">16</span>, <span class="number">16</span>);</span><br><span class="line">            QRect cellCenterRect = <span class="built_in">QRect</span>(m_baseHeight, drawHeight, (m_baseWidth - m_baseHeight) * <span class="number">0.5</span>, m_baseHeight);</span><br><span class="line">            QRect cellRightRect = <span class="built_in">QRect</span>(m_baseHeight + (m_baseWidth - m_baseHeight) * <span class="number">0.5</span>, drawHeight, (m_baseWidth - m_baseHeight) * <span class="number">0.5</span>, m_baseHeight);</span><br><span class="line">            <span class="keyword">if</span>(!item.icon.<span class="built_in">isNull</span>())</span><br><span class="line">            &#123;</span><br><span class="line">                QPixmap pixmap = item.icon.<span class="built_in">pixmap</span>(<span class="built_in">QSize</span>(<span class="number">16</span>, <span class="number">16</span>));</span><br><span class="line">                painter-&gt;<span class="built_in">drawPixmap</span>(cellLeftRect, pixmap);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(!item.text1.<span class="built_in">isEmpty</span>())</span><br><span class="line">            &#123;</span><br><span class="line">                painter-&gt;<span class="built_in">drawText</span>(cellCenterRect, Qt::AlignLeft | Qt::AlignVCenter, item.text1);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(!item.text2.<span class="built_in">isEmpty</span>())</span><br><span class="line">            &#123;</span><br><span class="line">                painter-&gt;<span class="built_in">drawText</span>(cellRightRect, Qt::AlignLeft | Qt::AlignVCenter, item.text2);</span><br><span class="line">            &#125;</span><br><span class="line">            drawHeight += m_baseHeight;</span><br><span class="line">        &#125;</span><br><span class="line">        curHeight += cellHeight;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">CustomGraphicRectItem::totalHeight</span><span class="params">()</span> <span class="type">const</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> m_totalHeight;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">CustomGraphicRectItem::setTotalHeight</span><span class="params">(<span class="type">int</span> totalHeight)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    m_totalHeight = totalHeight;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="定制化场景"><a href="#定制化场景" class="headerlink" title="定制化场景"></a>定制化场景</h1><h2 id="CustomGraphicScene-h"><a href="#CustomGraphicScene-h" class="headerlink" title="CustomGraphicScene.h"></a>CustomGraphicScene.h</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> CUSTOMGRAPHICSCENE_H</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> CUSTOMGRAPHICSCENE_H</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QGraphicsScene&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;CustomGraphicRectItem.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CustomGraphicScene</span> : <span class="keyword">public</span> QGraphicsScene</span><br><span class="line">&#123;</span><br><span class="line">    Q_OBJECT</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">explicit</span> <span class="title">CustomGraphicScene</span><span class="params">(QObject *parent = <span class="literal">nullptr</span>)</span></span>;</span><br><span class="line"></span><br><span class="line">    ~<span class="built_in">CustomGraphicScene</span>();</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">addItemNSetPos</span><span class="params">(CustomGraphicRectItem *item)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">lineHeight</span><span class="params">()</span> <span class="type">const</span></span>;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">setLineHeight</span><span class="params">(<span class="type">int</span> lineHeight)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="type">int</span> m_totalHeight;</span><br><span class="line">    <span class="type">int</span> m_lineHeight;</span><br><span class="line">    CustomGraphicRectItem *m_lastItem;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span> <span class="comment">// CUSTOMGRAPHICSCENE_H</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="CustomGraphicScene-cpp"><a href="#CustomGraphicScene-cpp" class="headerlink" title="CustomGraphicScene.cpp"></a>CustomGraphicScene.cpp</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;CustomGraphicScene.h&quot;</span></span></span><br><span class="line"></span><br><span class="line">CustomGraphicScene::<span class="built_in">CustomGraphicScene</span>(QObject *parent) :</span><br><span class="line">    <span class="built_in">QGraphicsScene</span>(parent), <span class="built_in">m_totalHeight</span>(<span class="number">0</span>), <span class="built_in">m_lineHeight</span>(<span class="number">30</span>), <span class="built_in">m_lastItem</span>(<span class="literal">nullptr</span>)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">CustomGraphicScene::~<span class="built_in">CustomGraphicScene</span>()</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">CustomGraphicScene::addItemNSetPos</span><span class="params">(CustomGraphicRectItem *item)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">this</span>-&gt;<span class="built_in">addItem</span>(item);</span><br><span class="line">    item-&gt;<span class="built_in">setPos</span>(<span class="number">0</span>, <span class="keyword">this</span>-&gt;m_totalHeight);</span><br><span class="line">    <span class="keyword">this</span>-&gt;m_totalHeight += item-&gt;<span class="built_in">totalHeight</span>() + m_lineHeight;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">this</span>-&gt;m_lastItem)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 获取上一个图元的边界矩形的底部中心点</span></span><br><span class="line">        QPointF startPoint = <span class="built_in">QPointF</span>(m_lastItem-&gt;<span class="built_in">boundingRect</span>().<span class="built_in">center</span>().<span class="built_in">x</span>(), m_lastItem-&gt;<span class="built_in">boundingRect</span>().<span class="built_in">bottom</span>() + <span class="number">1</span>);</span><br><span class="line">        <span class="comment">// 获取新图元的边界矩形的顶部中心点</span></span><br><span class="line">        QPointF endPoint = <span class="built_in">QPointF</span>(item-&gt;<span class="built_in">boundingRect</span>().<span class="built_in">center</span>().<span class="built_in">x</span>(), item-&gt;<span class="built_in">boundingRect</span>().<span class="built_in">top</span>());</span><br><span class="line">        <span class="comment">// 将两个点的坐标转换为场景坐标</span></span><br><span class="line">        startPoint = m_lastItem-&gt;<span class="built_in">mapToScene</span>(startPoint);</span><br><span class="line">        endPoint = item-&gt;<span class="built_in">mapToScene</span>(endPoint);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 创建线条图元连接这两个点</span></span><br><span class="line">        QGraphicsLineItem *line = <span class="keyword">new</span> <span class="built_in">QGraphicsLineItem</span>(<span class="built_in">QLineF</span>(startPoint, endPoint));</span><br><span class="line">        QPen pen;</span><br><span class="line">        pen.<span class="built_in">setWidth</span>(<span class="number">2</span>);</span><br><span class="line">        line-&gt;<span class="built_in">setPen</span>(pen);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 绘制朝下的箭头</span></span><br><span class="line">        QPolygonF arrowHead;</span><br><span class="line">        arrowHead &lt;&lt; <span class="built_in">QPointF</span>(<span class="number">-3</span>, <span class="number">-10</span>) &lt;&lt; <span class="built_in">QPointF</span>(<span class="number">0</span>, <span class="number">0</span>) &lt;&lt; <span class="built_in">QPointF</span>(<span class="number">3</span>, <span class="number">-10</span>);</span><br><span class="line">        QGraphicsPolygonItem *arrow = <span class="keyword">new</span> <span class="built_in">QGraphicsPolygonItem</span>(arrowHead);</span><br><span class="line">        arrow-&gt;<span class="built_in">setBrush</span>(Qt::black);</span><br><span class="line">        arrow-&gt;<span class="built_in">setPos</span>(endPoint);</span><br><span class="line">        <span class="keyword">this</span>-&gt;<span class="built_in">addItem</span>(line);</span><br><span class="line">        <span class="keyword">this</span>-&gt;<span class="built_in">addItem</span>(arrow);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">this</span>-&gt;m_lastItem = item;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">CustomGraphicScene::lineHeight</span><span class="params">()</span> <span class="type">const</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> m_lineHeight;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">CustomGraphicScene::setLineHeight</span><span class="params">(<span class="type">int</span> lineHeight)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    m_lineHeight = lineHeight;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;Widget.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;ui_Widget.h&quot;</span></span></span><br><span class="line"></span><br><span class="line">Widget::<span class="built_in">Widget</span>(QWidget *parent)</span><br><span class="line">    : <span class="built_in">QWidget</span>(parent)</span><br><span class="line">    , <span class="built_in">ui</span>(<span class="keyword">new</span> Ui::Widget)</span><br><span class="line">&#123;</span><br><span class="line">    ui-&gt;<span class="built_in">setupUi</span>(<span class="keyword">this</span>);</span><br><span class="line">    <span class="comment">// 加载场景</span></span><br><span class="line">    CustomGraphicScene *scene = <span class="keyword">new</span> CustomGraphicScene;</span><br><span class="line">    ui-&gt;graphicsView-&gt;<span class="built_in">setScene</span>(scene);</span><br><span class="line"></span><br><span class="line">    QList&lt;QList&lt;b_item&gt;&gt; dataList;</span><br><span class="line">    dataList.<span class="built_in">append</span>(&#123;&#123;<span class="built_in">QIcon</span>(<span class="string">&quot;:/test.png&quot;</span>), <span class="string">&quot;111&quot;</span>, <span class="string">&quot;112&quot;</span>&#125;, &#123;<span class="built_in">QIcon</span>(<span class="string">&quot;:/test.png&quot;</span>), <span class="string">&quot;121&quot;</span>, <span class="string">&quot;122&quot;</span>&#125;&#125;);</span><br><span class="line">    dataList.<span class="built_in">append</span>(&#123;&#123;<span class="built_in">QIcon</span>(), <span class="string">&quot;211&quot;</span>, <span class="string">&quot;212&quot;</span>&#125;&#125;);</span><br><span class="line">    dataList.<span class="built_in">append</span>(&#123;&#123;<span class="built_in">QIcon</span>(<span class="string">&quot;:/test.png&quot;</span>), <span class="string">&quot;311&quot;</span>, <span class="string">&quot;312&quot;</span>&#125;, &#123;<span class="built_in">QIcon</span>(<span class="string">&quot;:/test.png&quot;</span>), <span class="string">&quot;321&quot;</span>, <span class="string">&quot;322&quot;</span>&#125;&#125;);</span><br><span class="line"></span><br><span class="line">    CustomGraphicRectItem *item = <span class="keyword">new</span> <span class="built_in">CustomGraphicRectItem</span>(<span class="string">&quot;节点1&quot;</span>, dataList);</span><br><span class="line">    CustomGraphicRectItem *item2 = <span class="keyword">new</span> <span class="built_in">CustomGraphicRectItem</span>(<span class="string">&quot;节点2&quot;</span>, dataList);</span><br><span class="line">    CustomGraphicRectItem *item3 = <span class="keyword">new</span> <span class="built_in">CustomGraphicRectItem</span>(<span class="string">&quot;节点3&quot;</span>, dataList);</span><br><span class="line"></span><br><span class="line">    scene-&gt;<span class="built_in">addItemNSetPos</span>(item);</span><br><span class="line">    scene-&gt;<span class="built_in">addItemNSetPos</span>(item2);</span><br><span class="line">    scene-&gt;<span class="built_in">addItemNSetPos</span>(item3);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Widget::~<span class="built_in">Widget</span>()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">delete</span> ui;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><script src="https://jsd.onmicrosoft.cn/npm/hexo-theme-a4@latest/source/js/lightgallery.min.js"></script><script>if("undefined"!=typeof lightGallery) {        var options1 = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options1);        }</script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2024/07/04/QT-TreeView/"/>
      <url>/2024/07/04/QT-TreeView/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://jsd.onmicrosoft.cn/npm/hexo-theme-a4@latest/source/css/lightgallery.min.css" /><div class=".article-gallery"><p>{\n    &#39;action&#39;: 1001,\n    &#39;action_zh&#39;: &#39;打印申请&#39;,\n    &#39;copies&#39;: &#39;1&#39;,\n    &#39;filePath&#39;: &#39;C:&#x2F;Program Files (x86)&#x2F;网剑系统&#x2F;temp&#x2F;00037.pdf&#39;,\n    &#39;name&#39;: &#39;编译安装cups-pdf.txt-记事本&#39;,\n    &#39;size&#39;: &#39;9&#39;\n}\n</p></div><script src="https://jsd.onmicrosoft.cn/npm/hexo-theme-a4@latest/source/js/lightgallery.min.js"></script><script>if("undefined"!=typeof lightGallery) {        var options1 = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options1);        }</script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2024/07/04/QT-QCalendarWidget/"/>
      <url>/2024/07/04/QT-QCalendarWidget/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://jsd.onmicrosoft.cn/npm/hexo-theme-a4@latest/source/css/lightgallery.min.css" /><div class=".article-gallery"><h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">QCalendarWidget *calendar = <span class="keyword">new</span> <span class="built_in">QCalendarWidget</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 隐藏导航栏</span></span><br><span class="line">calendar-&gt;<span class="built_in">setNavigationBarVisible</span>(<span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 隐藏日期网格线</span></span><br><span class="line">calendar-&gt;<span class="built_in">setGridVisible</span>(<span class="literal">false</span>);</span><br><span class="line"><span class="comment">// 设置每列第一天为周几</span></span><br><span class="line">calendar-&gt;<span class="built_in">setFirstDayOfWeek</span>(Qt::Saturday);</span><br><span class="line"><span class="comment">// 设置周几显示的文字类型</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    QCalendarWidget::NoHorizontalHeader:    0, 隐藏日期标题</span></span><br><span class="line"><span class="comment">    QCalendarWidget::SingleLetterDayNames:  1, 日期首字母缩写(如M, T, S, T, F, S, S)</span></span><br><span class="line"><span class="comment">    QCalendarWidget::ShortDayNames:         2, 日期简写</span></span><br><span class="line"><span class="comment">    QCalendarWidget::LongDayNames:          3, 日期全称</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">calendar-&gt;<span class="built_in">setHorizontalHeaderFormat</span>(QCalendarWidget::SingleLetterDayNames);</span><br></pre></td></tr></table></figure><h2 id="样式"><a href="#样式" class="headerlink" title="样式"></a>样式</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/* 日历全样式 */</span></span><br><span class="line">QCalendarWidget QWidget &#123;</span><br><span class="line">    <span class="attribute">font</span>: <span class="number">14px</span> Microsoft YaHei;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgb</span>(<span class="number">128</span>, <span class="number">128</span>, <span class="number">128</span>);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 日历导航栏样式 */</span></span><br><span class="line"><span class="selector-id">#qt_calendar_navigationbar</span> &#123;&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 按钮样式：上个月、下个月 */</span></span><br><span class="line"><span class="selector-id">#qt_calendar_prevmouth</span> &#123;&#125;;</span><br><span class="line"><span class="selector-id">#qt_calendar_nextmouth</span> &#123;&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 按钮样式：当前月份-正常状态、选择状态 */</span></span><br><span class="line">QToolButton<span class="selector-id">#qt_calendar_mouthbutton</span> &#123;&#125;;</span><br><span class="line">QCalendarWidget QMenu &#123;&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 按钮样式：当前年份-正常状态、选择状态*/</span></span><br><span class="line">QToolButton<span class="selector-id">#qt_calendar_yearbutton</span> &#123;&#125;;</span><br><span class="line">QCalendarWidget QSpinBox<span class="selector-id">#qt_calendar_yearedit</span> &#123;&#125;;</span><br><span class="line">QCalendarWidget QSpinBox<span class="selector-id">#qt_calendar_yearedit</span>::up-arrow &#123;&#125;;     <span class="comment">/* 上箭头 */</span></span><br><span class="line">QCalendarWidget QSpinBox<span class="selector-id">#qt_calendar_yearedit</span>::down-arrow &#123;&#125;;   <span class="comment">/* 下箭头 */</span></span><br><span class="line">QCalendarWidget QSpinBox<span class="selector-id">#qt_calendar_yearedit</span>::up-button &#123;&#125;;    <span class="comment">/* 上图标 */</span></span><br><span class="line">QCalendarWidget QSpinBox<span class="selector-id">#qt_calendar_yearedit</span>::down-button &#123;&#125;;  <span class="comment">/* 下图标 */</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 周栏 */</span></span><br><span class="line"><span class="comment">/* 样式：周一到周五 */</span></span><br><span class="line">QCalendarWidget QTableView &#123;</span><br><span class="line">    alternate-<span class="attribute">background-color</span>: blue;</span><br><span class="line">    <span class="attribute">color</span>: black;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">/* 样式：周六到周日（需要代码单独设置） */</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">QTextCharFormat weekendFormat;</span></span><br><span class="line"><span class="comment">weekendFormat.setForeground(QBrush(QColor(153, 51, 255)));</span></span><br><span class="line"><span class="comment">calendar-&gt;setWeekdayTextFormat(Qt::Saturday, weekendFormat);</span></span><br><span class="line"><span class="comment">calendar-&gt;setWeekdayTextFormat(Qt::Sunday, weekendFormat);</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 日期栏 */</span></span><br><span class="line"><span class="selector-id">#qt_calendar_calendarview</span>&#123;</span><br><span class="line">        <span class="attribute">background-color</span>:<span class="built_in">rgb</span>(<span class="number">229</span>, <span class="number">229</span>, <span class="number">252</span>);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/* 选中月日期 */</span></span><br><span class="line">QCalendarWidget QAbstractItemView<span class="selector-pseudo">:enabled</span>&#123;</span><br><span class="line">        <span class="attribute">font</span>:<span class="number">18px</span> Microsoft YaHei;</span><br><span class="line">        <span class="attribute">color</span>:<span class="built_in">rgb</span>(<span class="number">0</span>, <span class="number">204</span>, <span class="number">204</span>);</span><br><span class="line">        selection-<span class="attribute">color</span>:<span class="built_in">rgb</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>);</span><br><span class="line">        selection-<span class="attribute">background-color</span>:<span class="built_in">rgb</span>(<span class="number">0</span>, <span class="number">102</span>, <span class="number">102</span>);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/* 非选中月日期 */</span></span><br><span class="line">QCalendarWidget QAbstractItemView<span class="selector-pseudo">:disabled</span>&#123;</span><br><span class="line">        <span class="attribute">color</span>:<span class="built_in">rgb</span>(<span class="number">204</span>, <span class="number">255</span>, <span class="number">204</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></div><script src="https://jsd.onmicrosoft.cn/npm/hexo-theme-a4@latest/source/js/lightgallery.min.js"></script><script>if("undefined"!=typeof lightGallery) {        var options1 = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options1);        }</script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2024/07/04/QT-QAbstractSpinBox/"/>
      <url>/2024/07/04/QT-QAbstractSpinBox/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://jsd.onmicrosoft.cn/npm/hexo-theme-a4@latest/source/css/lightgallery.min.css" /><div class=".article-gallery"><h1 id="QAbstractSpinBox"><a href="#QAbstractSpinBox" class="headerlink" title="QAbstractSpinBox"></a>QAbstractSpinBox</h1><p><code>QAbstractSpinBox</code>，是所有带有微调输入框的抽象基类。<br>是一种允许用户通过点击上下箭头按钮或输入数字来调整数值的GUI控件。</p><h2 id="属性"><a href="#属性" class="headerlink" title="属性"></a>属性</h2><p><code>QAbstractSpinBox</code>类提供了一些常用属性来定制微调器控件的行为和外观。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// wrapping: 取值范围是否头尾相连（最大值向上回到到最小值，最小值向下回到最大值）</span></span><br><span class="line"><span class="built_in">Q_PROPERTY</span>(<span class="type">bool</span> wrapping READ wrapping WRITE setWrapping)</span><br><span class="line"></span><br><span class="line"><span class="comment">// frame: 是否显示微调器控件的边框</span></span><br><span class="line"><span class="built_in">Q_PROPERTY</span>(<span class="type">bool</span> frame READ hasFrame WRITE setFrame)</span><br><span class="line"></span><br><span class="line"><span class="comment">// alignment: 文本对齐方式。默认左对齐Qt::AlignLeft</span></span><br><span class="line"><span class="built_in">Q_PROPERTY</span>(Qt::Alignment alignment READ alignment WRITE setAlignment)</span><br><span class="line"></span><br><span class="line"><span class="comment">// readOnly: 输入框只读（不可编辑，可复制，不显示光标）</span></span><br><span class="line"><span class="built_in">Q_PROPERTY</span>(<span class="type">bool</span> readOnly READ isReadOnly WRITE setReadOnly)</span><br><span class="line"></span><br><span class="line"><span class="comment">// buttonSymbols: 设置上下键按钮的样式</span></span><br><span class="line"><span class="comment">// * 上下箭头：QAbstractSpinBox::UpDownArrow</span></span><br><span class="line"><span class="comment">// * 加减按钮：QAbstractSpinBox::PlusMinus</span></span><br><span class="line"><span class="comment">// * 无需按钮：QAbstractSpinBox::NoButtons</span></span><br><span class="line"><span class="built_in">Q_PROPERTY</span>(ButtonSymbols buttonSymbols READ buttonSymbols WRITE setButtonSymbols)</span><br><span class="line"></span><br><span class="line"><span class="comment">// specialValueText: 显示特殊文本。若当前值 == minimum()，显示此文本）</span></span><br><span class="line"><span class="built_in">Q_PROPERTY</span>(QString specialValueText READ specialValueText WRITE setSpecialValueText)</span><br><span class="line"></span><br><span class="line"><span class="comment">// text: 保存输入框当前文本</span></span><br><span class="line"><span class="built_in">Q_PROPERTY</span>(QString text READ text)</span><br><span class="line"></span><br><span class="line"><span class="comment">// accelerated: 是否启用加速（按住上下键时）</span></span><br><span class="line"><span class="built_in">Q_PROPERTY</span>(<span class="type">bool</span> accelerated READ isAccelerated WRITE setAccelerated)</span><br><span class="line"></span><br><span class="line"><span class="comment">// correctionMode: 设置用户在输入无效值时的纠正模式</span></span><br><span class="line"><span class="comment">// 将输入的无效值纠正为上一个有效值: QAbstractSpinBox::CorrectToPreviousValue</span></span><br><span class="line"><span class="comment">// 将输入的无效值纠正为最接近的有效值: QAbstractSpinBox::CorrectToNearestValue</span></span><br><span class="line"><span class="built_in">Q_PROPERTY</span>(CorrectionMode correctionMode READ correctionMode WRITE setCorrectionMode)</span><br><span class="line"></span><br><span class="line"><span class="comment">// acceptableInput: 表示当前输入是否满足验证</span></span><br><span class="line"><span class="built_in">Q_PROPERTY</span>(<span class="type">bool</span> acceptableInput READ hasAcceptableInput)</span><br><span class="line"></span><br><span class="line"><span class="comment">// keyboardTracking: 是否启用键盘跟踪</span></span><br><span class="line"><span class="comment">// 启用后，当键盘输入新值时，spinBox会发出valueChanged()信号和textChanged()信号</span></span><br><span class="line"><span class="built_in">Q_PROPERTY</span>(<span class="type">bool</span> keyboardTracking READ keyboardTracking WRITE setKeyboardTracking)</span><br><span class="line"></span><br><span class="line"><span class="comment">// showGroupSeperator: 是否显示千位分隔符，默认false（如 12,999）</span></span><br><span class="line"><span class="built_in">Q_PROPERTY</span>(<span class="type">bool</span> showGroupSeparator READ isGroupSeparatorShown WRITE setGroupSeparatorShown)</span><br></pre></td></tr></table></figure><h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 修复用户输入的不正确的值（继承自QValidator类）</span></span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">fixup</span><span class="params">(QString &amp;input)</span> <span class="type">const</span></span>;</span><br><span class="line"><span class="comment">// 验证用户输入的字符串是否有效</span></span><br><span class="line"><span class="comment">// 参数为：验证的字符串，光标的位置</span></span><br><span class="line"><span class="comment">// QValidator::Acceptable：字符串有效</span></span><br><span class="line"><span class="comment">// QValidator::Invalid：字符串无效</span></span><br><span class="line"><span class="comment">// QValidator::Intermediate：字符串有效性待定，需继续输入</span></span><br><span class="line"><span class="function"><span class="keyword">virtual</span> QValidator::State <span class="title">validate</span><span class="params">(QString &amp;input, <span class="type">int</span> &amp;pos)</span> <span class="type">const</span></span>;</span><br><span class="line"><span class="comment">// 变更步长</span></span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">stepBy</span><span class="params">(<span class="type">int</span> steps)</span></span>;</span><br><span class="line"><span class="comment">// 递增1个步长，等同于stepBy(1)</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">stepUp</span><span class="params">()</span></span>;</span><br><span class="line"><span class="comment">// 递减1个步长，等同于stepBy(-1)</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">stepDown</span><span class="params">()</span></span>;</span><br><span class="line"><span class="comment">// 选择文本，不包含前缀和后缀</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">selectAll</span><span class="params">()</span></span>;</span><br><span class="line"><span class="comment">// 清除文本，保留前缀和后缀</span></span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">clear</span><span class="params">()</span></span>;</span><br></pre></td></tr></table></figure><h1 id="QSpinBox"><a href="#QSpinBox" class="headerlink" title="QSpinBox"></a>QSpinBox</h1><h2 id="属性-1"><a href="#属性-1" class="headerlink" title="属性"></a>属性</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 设置文本前缀</span></span><br><span class="line"><span class="built_in">Q_PROPERTY</span>(QString suffix READ suffix WRITE setSuffix)</span><br><span class="line"><span class="comment">// 设置文本后缀</span></span><br><span class="line"><span class="built_in">Q_PROPERTY</span>(QString prefix READ prefix WRITE setPrefix)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 保存编辑框文本，但不包括任何前缀、后缀、前导、尾部空格</span></span><br><span class="line"><span class="built_in">Q_PROPERTY</span>(QString cleanText READ cleanText)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 预设最小值</span></span><br><span class="line"><span class="built_in">Q_PROPERTY</span>(<span class="type">int</span> minimum READ minimum WRITE setMinimum)</span><br><span class="line"><span class="comment">// 预设最大值</span></span><br><span class="line"><span class="built_in">Q_PROPERTY</span>(<span class="type">int</span> maximum READ maximum WRITE setMaximum)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置上下键的单步步长，默认为1</span></span><br><span class="line"><span class="built_in">Q_PROPERTY</span>(<span class="type">int</span> singleStep READ singleStep WRITE setSingleStep)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置步进类型</span></span><br><span class="line"><span class="comment">// * QAbstractSpinBox::DefaultStepType：默认步进，一般为1</span></span><br><span class="line"><span class="comment">// * QAbstractSpinBox::AdaptiveDecimalStepType: 自适应步长，根据数字的大小自动调整步长</span></span><br><span class="line"><span class="built_in">Q_PROPERTY</span>(StepType stepType READ stepType WRITE setStepType)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 保存当前值</span></span><br><span class="line"><span class="built_in">Q_PROPERTY</span>(<span class="type">int</span> value READ value WRITE setValue NOTIFY valueChanged USER <span class="literal">true</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置显示值的进制（2，8，10，16，默认10）</span></span><br><span class="line"><span class="built_in">Q_PROPERTY</span>(<span class="type">int</span> displayIntegerBase READ displayIntegerBase WRITE setDisplayIntegerBase)</span><br></pre></td></tr></table></figure><h2 id="方法-1"><a href="#方法-1" class="headerlink" title="方法"></a>方法</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 预设最大值和最小值</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">setRange</span><span class="params">(<span class="type">int</span> minimum, <span class="type">int</span> maximum)</span></span>;</span><br><span class="line"><span class="comment">// 将字符串转为数字</span></span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">int</span> <span class="title">valueFromText</span><span class="params">(<span class="type">const</span> QString &amp;text)</span> <span class="type">const</span></span>;</span><br><span class="line"><span class="comment">// 将数字转为字符串</span></span><br><span class="line"><span class="function"><span class="keyword">virtual</span> QString <span class="title">textFromValue</span><span class="params">(<span class="type">int</span> val)</span> <span class="type">const</span></span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="信号"><a href="#信号" class="headerlink" title="信号"></a>信号</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 文本发生变化时触发</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">textChanged</span><span class="params">(<span class="type">const</span> QString &amp;text)</span></span>;</span><br><span class="line"><span class="comment">// 值发生变化时触发</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">valueChanged</span><span class="params">(<span class="type">int</span> i)</span></span>;</span><br></pre></td></tr></table></figure><h1 id="QDoubleSpinBox"><a href="#QDoubleSpinBox" class="headerlink" title="QDoubleSpinBox"></a>QDoubleSpinBox</h1><h2 id="属性-2"><a href="#属性-2" class="headerlink" title="属性"></a>属性</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 设置精度</span></span><br><span class="line"><span class="built_in">Q_PROPERTY</span>(<span class="type">int</span> decimals READ decimals WRITE setDecimals)</span><br><span class="line"><span class="comment">// 以下属性与QSpinBox一致，参数由int换为double</span></span><br><span class="line"><span class="built_in">Q_PROPERTY</span>(QString prefix READ prefix WRITE setPrefix)</span><br><span class="line"><span class="built_in">Q_PROPERTY</span>(QString suffix READ suffix WRITE setSuffix)</span><br><span class="line"><span class="built_in">Q_PROPERTY</span>(QString cleanText READ cleanText)</span><br><span class="line"><span class="built_in">Q_PROPERTY</span>(<span class="type">double</span> minimum READ minimum WRITE setMinimum)</span><br><span class="line"><span class="built_in">Q_PROPERTY</span>(<span class="type">double</span> maximum READ maximum WRITE setMaximum)</span><br><span class="line"><span class="built_in">Q_PROPERTY</span>(<span class="type">double</span> singleStep READ singleStep WRITE setSingleStep)</span><br><span class="line"><span class="built_in">Q_PROPERTY</span>(StepType stepType READ stepType WRITE setStepType)</span><br><span class="line"><span class="built_in">Q_PROPERTY</span>(<span class="type">double</span> value READ value WRITE setValue NOTIFY valueChanged USER <span class="literal">true</span>)</span><br></pre></td></tr></table></figure><h2 id="方法-2"><a href="#方法-2" class="headerlink" title="方法"></a>方法</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">QValidator::State <span class="title">validate</span><span class="params">(QString &amp;input, <span class="type">int</span> &amp;pos)</span> <span class="type">const</span> <span class="keyword">override</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">double</span> <span class="title">valueFromText</span><span class="params">(<span class="type">const</span> QString &amp;text)</span> <span class="type">const</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> QString <span class="title">textFromValue</span><span class="params">(<span class="type">double</span> val)</span> <span class="type">const</span></span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">fixup</span><span class="params">(QString &amp;str)</span> <span class="type">const</span> <span class="keyword">override</span></span>;</span><br></pre></td></tr></table></figure><h2 id="信号-1"><a href="#信号-1" class="headerlink" title="信号"></a>信号</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">valueChanged</span><span class="params">(<span class="type">double</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">textChanged</span><span class="params">(<span class="type">const</span> QString &amp;)</span></span>;</span><br></pre></td></tr></table></figure></div><script src="https://jsd.onmicrosoft.cn/npm/hexo-theme-a4@latest/source/js/lightgallery.min.js"></script><script>if("undefined"!=typeof lightGallery) {        var options1 = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options1);        }</script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2024/07/04/QT-FFMPEG-%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
      <url>/2024/07/04/QT-FFMPEG-%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://jsd.onmicrosoft.cn/npm/hexo-theme-a4@latest/source/css/lightgallery.min.css" /><div class=".article-gallery"><h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><ol><li>下载FFMPEG，本次测试版本为<code>4.2.1</code>；</li><li>新建一个项目<code>DemoFFMPEG</code>；</li><li>将下载好的<code>FFMPEG-share</code>包中的<code>bin</code>和<code>include</code>文件夹拷贝到项目下（若勾选了<code>shadow build</code>，需要将<code>bin</code>中的所有dll拷贝到指定的<code>debug/release</code>文件夹下，保证编译的exe和bin中的dll文件在一个目录下）。</li><li>在<code>pro</code>文件中添加：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"># exe生成目录（保证编译的exe和bin中的dll文件在一个目录下）</span><br><span class="line"># DESTDIR += bin</span><br><span class="line"></span><br><span class="line"># $$PWD项目根目录</span><br><span class="line">LIBS += $$PWD/lib/sqlite3.lib</span><br><span class="line">INCLUDEPATH += ./ffmpeglib/include</span><br><span class="line">LIBS += $$PWD/ffmpeglib/lib/avcodec.lib  \</span><br><span class="line">        $$PWD/ffmpeglib/lib/avdevice.lib  \</span><br><span class="line">        $$PWD/ffmpeglib/lib/avfilter.lib  \</span><br><span class="line">        $$PWD/ffmpeglib/lib/avformat.lib  \</span><br><span class="line">        $$PWD/ffmpeglib/lib/avutil.lib  \</span><br><span class="line">        $$PWD/ffmpeglib/lib/swresample.lib  \</span><br><span class="line">        $$PWD/ffmpeglib/lib/swscale.lib</span><br></pre></td></tr></table></figure></li><li>测试运行：<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QApplication&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QDebug&gt;</span></span></span><br><span class="line"><span class="keyword">extern</span> <span class="string">&quot;C&quot;</span></span><br><span class="line">&#123;</span><br><span class="line">   <span class="meta">#<span class="keyword">include</span><span class="string">&quot;libavcodec/avcodec.h&quot;</span></span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span> *argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="function">QApplication <span class="title">a</span><span class="params">(argc, argv)</span></span>;</span><br><span class="line">    <span class="built_in">qDebug</span>() &lt;&lt; <span class="string">&quot;FFMPEG version：&quot;</span> &lt;&lt; <span class="built_in">avcodec_version</span>();</span><br><span class="line">    <span class="keyword">return</span> a.<span class="built_in">exec</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>输出：<code>FFMPEG version： 3819878</code>则搭建成功。</li></ol></div><script src="https://jsd.onmicrosoft.cn/npm/hexo-theme-a4@latest/source/js/lightgallery.min.js"></script><script>if("undefined"!=typeof lightGallery) {        var options1 = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options1);        }</script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2024/07/04/QT-DateTimeEdit/"/>
      <url>/2024/07/04/QT-DateTimeEdit/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://jsd.onmicrosoft.cn/npm/hexo-theme-a4@latest/source/css/lightgallery.min.css" /><div class=".article-gallery"></div><script src="https://jsd.onmicrosoft.cn/npm/hexo-theme-a4@latest/source/js/lightgallery.min.js"></script><script>if("undefined"!=typeof lightGallery) {        var options1 = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options1);        }</script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2024/07/04/LINUX_%E6%96%87%E4%BB%B6%E6%89%93%E5%BC%80%E6%96%B9%E5%BC%8F/"/>
      <url>/2024/07/04/LINUX_%E6%96%87%E4%BB%B6%E6%89%93%E5%BC%80%E6%96%B9%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://jsd.onmicrosoft.cn/npm/hexo-theme-a4@latest/source/css/lightgallery.min.css" /><div class=".article-gallery"><h2 id="获取文件MIME类型"><a href="#获取文件MIME类型" class="headerlink" title="获取文件MIME类型"></a>获取文件MIME类型</h2><p>通常情况下，我们会根据文件后缀去获取文件类型，通过获取文件的MIME类型就可以获取到。<br>但有时候，获取到的MIME类型过于精确，当系统里没保存这个文件类型的打开方式时，就获取不到任何的打开方式。<br>MIME是可以相互继承的，所以我们可以通过获取到上级类型，或者通过是否继承自某种类型来获取更通用的打开方式。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QMimeDatabase&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QMimeType&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QDebug&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">getMIMEType</span>(<span class="string">&quot;/root/桌面/1.txt&quot;</span>);</span><br><span class="line">    <span class="built_in">getMIMEType</span>(<span class="string">&quot;/root/桌面/1.md&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">getMIMEType</span><span class="params">(QString filepath)</span> </span>&#123;</span><br><span class="line">    QMimeDatabase db;</span><br><span class="line">    QMimeType type = db.<span class="built_in">mimeTypeForFile</span>(filepath);</span><br><span class="line">    <span class="built_in">qDebug</span>() &lt;&lt; <span class="string">&quot;MIME type of &quot;</span> &lt;&lt; filepath <span class="string">&quot; is :&quot;</span> &lt;&lt; type.<span class="built_in">name</span>() &lt;&lt; type.<span class="built_in">parentMimeTypes</span>();</span><br><span class="line">        <span class="comment">// if (type.inherits(&quot;text/plain&quot;))</span></span><br><span class="line">    <span class="comment">// &#123;</span></span><br><span class="line">    <span class="comment">//     qDebug() &lt;&lt; &quot;MIME type of &quot; &lt;&lt; filepath &quot; is :&quot; &lt;&lt; &quot;text/plain&quot;;</span></span><br><span class="line">    <span class="comment">//     return;</span></span><br><span class="line">    <span class="comment">// &#125;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">MIME type of  &quot;/root/桌面/1.md&quot;  is : text/plain</span><br></pre></td></tr></table></figure></div><script src="https://jsd.onmicrosoft.cn/npm/hexo-theme-a4@latest/source/js/lightgallery.min.js"></script><script>if("undefined"!=typeof lightGallery) {        var options1 = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options1);        }</script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2024/07/04/LINUX_%E7%9B%91%E5%90%AC%E6%96%87%E4%BB%B6%E6%89%93%E5%BC%80%E7%8A%B6%E6%80%81/"/>
      <url>/2024/07/04/LINUX_%E7%9B%91%E5%90%AC%E6%96%87%E4%BB%B6%E6%89%93%E5%BC%80%E7%8A%B6%E6%80%81/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://jsd.onmicrosoft.cn/npm/hexo-theme-a4@latest/source/css/lightgallery.min.css" /><div class=".article-gallery"><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QCoreApplication&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QSocketNotifier&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sys/inotify.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;unistd.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QDebug&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span> *argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="function">QCoreApplication <span class="title">a</span><span class="params">(argc, argv)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> fd = <span class="number">-1</span>, wd = <span class="number">-1</span>;</span><br><span class="line"></span><br><span class="line">    fd = <span class="built_in">inotify_init</span>();</span><br><span class="line">    <span class="keyword">if</span> (fd &lt; <span class="number">0</span>) &#123; <span class="built_in">perror</span>(<span class="string">&quot;inotify_init: &quot;</span>); &#125;</span><br><span class="line"></span><br><span class="line">    wd = <span class="built_in">inotify_add_watch</span>(fd, <span class="string">&quot;/opt/WorkSpace/test&quot;</span>, IN_ALL_EVENTS);</span><br><span class="line">    <span class="keyword">if</span> (wd &lt; <span class="number">0</span>) &#123; <span class="built_in">perror</span>(<span class="string">&quot;inotify_add_watch: &quot;</span>); &#125;</span><br><span class="line"></span><br><span class="line">    QSocketNotifier *notifier = <span class="keyword">new</span> <span class="built_in">QSocketNotifier</span>(fd, QSocketNotifier::Read);</span><br><span class="line">    QObject::<span class="built_in">connect</span>(notifier, &amp;QSocketNotifier::activated, [&amp;]() </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> offset = <span class="number">0</span>;</span><br><span class="line">        <span class="type">char</span> buffer[<span class="number">4096</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line">        <span class="keyword">struct</span> inotify_event *event = <span class="literal">nullptr</span>;</span><br><span class="line">        <span class="type">int</span> length = <span class="built_in">read</span>(fd, buffer, <span class="built_in">sizeof</span>(buffer));</span><br><span class="line">        <span class="keyword">if</span> (length &lt; <span class="number">0</span>) &#123; <span class="built_in">perror</span>(<span class="string">&quot;read: &quot;</span>); &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (offset &lt; length)</span><br><span class="line">        &#123;</span><br><span class="line">            event = (<span class="keyword">struct</span> inotify_event *)&amp;buffer[offset];</span><br><span class="line">            <span class="keyword">if</span> (event-&gt;len)</span><br><span class="line">            &#123;</span><br><span class="line">                QString operate;</span><br><span class="line">                <span class="type">int</span> mask = event-&gt;mask;</span><br><span class="line">                <span class="keyword">if</span> (mask &amp; IN_ACCESS)        operate = <span class="string">&quot;ACCESS&quot;</span>;</span><br><span class="line">                <span class="keyword">if</span> (mask &amp; IN_ATTRIB)        operate = <span class="string">&quot;ATTRIB&quot;</span>;</span><br><span class="line">                <span class="keyword">if</span> (mask &amp; IN_CLOSE_WRITE)   operate = <span class="string">&quot;CLOSE_WRITE&quot;</span>;</span><br><span class="line">                <span class="keyword">if</span> (mask &amp; IN_CLOSE_NOWRITE) operate = <span class="string">&quot;CLOSE_NOWRITE&quot;</span>;</span><br><span class="line">                <span class="keyword">if</span> (mask &amp; IN_CREATE)        operate = <span class="string">&quot;CREATE&quot;</span>;</span><br><span class="line">                <span class="keyword">if</span> (mask &amp; IN_DELETE_SELF)   operate = <span class="string">&quot;DELETE_SELF&quot;</span>;</span><br><span class="line">                <span class="keyword">if</span> (mask &amp; IN_MODIFY)        operate = <span class="string">&quot;MODIFY&quot;</span>;</span><br><span class="line">                <span class="keyword">if</span> (mask &amp; IN_MOVE_SELF)     operate = <span class="string">&quot;MOVE_SELF&quot;</span>;</span><br><span class="line">                <span class="keyword">if</span> (mask &amp; IN_MOVED_FROM)    operate = <span class="string">&quot;MOVED_FROM&quot;</span>;</span><br><span class="line">                <span class="keyword">if</span> (mask &amp; IN_MOVED_TO)      operate = <span class="string">&quot;MOVED_TO&quot;</span>;</span><br><span class="line">                <span class="keyword">if</span> (mask &amp; IN_OPEN)          operate = <span class="string">&quot;OPEN&quot;</span>;</span><br><span class="line">                <span class="keyword">if</span> (mask &amp; IN_IGNORED)       operate = <span class="string">&quot;IGNORED&quot;</span>;</span><br><span class="line">                <span class="keyword">if</span> (mask &amp; IN_DELETE)        operate = <span class="string">&quot;DELETE&quot;</span>;</span><br><span class="line">                <span class="keyword">if</span> (mask &amp; IN_UNMOUNT)       operate = <span class="string">&quot;UNMOUNT&quot;</span>;</span><br><span class="line">                <span class="built_in">qDebug</span>() &lt;&lt;  event-&gt;name &lt;&lt; operate;</span><br><span class="line">            &#125;</span><br><span class="line">            offset += <span class="built_in">sizeof</span>(<span class="keyword">struct</span> inotify_event) + event-&gt;len;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">return</span> a.<span class="built_in">exec</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>相关资料：</p><ol><li><a href="https://juejin.cn/post/6966910863101919269">https://juejin.cn/post/6966910863101919269</a></li><li><a href="https://blog.csdn.net/unonoi/article/details/125744120">https://blog.csdn.net/unonoi/article/details/125744120</a></li><li><a href="https://www.cnblogs.com/PikapBai/p/14480881.html#4%20inotify%20%E5%B8%B8%E7%94%A8%E7%9B%91%E6%8E%A7%E4%BA%8B%E4%BB%B6#">https://www.cnblogs.com/PikapBai/p/14480881.html#4%20inotify%20%E5%B8%B8%E7%94%A8%E7%9B%91%E6%8E%A7%E4%BA%8B%E4%BB%B6#</a></li></ol></div><script src="https://jsd.onmicrosoft.cn/npm/hexo-theme-a4@latest/source/js/lightgallery.min.js"></script><script>if("undefined"!=typeof lightGallery) {        var options1 = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options1);        }</script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2024/07/04/LINUX_QT%E5%B7%A5%E7%A8%8B%E6%89%93%E5%8C%85_linuxdeployqt_deb/"/>
      <url>/2024/07/04/LINUX_QT%E5%B7%A5%E7%A8%8B%E6%89%93%E5%8C%85_linuxdeployqt_deb/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://jsd.onmicrosoft.cn/npm/hexo-theme-a4@latest/source/css/lightgallery.min.css" /><div class=".article-gallery"><h2 id="1-准备：安装打包工具linuxdepoyqt"><a href="#1-准备：安装打包工具linuxdepoyqt" class="headerlink" title="1. 准备：安装打包工具linuxdepoyqt"></a><strong>1.</strong> 准备：安装打包工具linuxdepoyqt</h2><p>(1). 下载inuxdepoyqt </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">转到链接：https://github.com/probonopd/linuxdeployqt/releases</span><br><span class="line">下载文件：linuxdeployqt-countinuous-x86_64.AppImage</span><br></pre></td></tr></table></figure><p>(2). 拷贝到 &#x2F;usr&#x2F;local&#x2F;bin目录中，并重命名</p><p><code>cp linuxdeployqt-continuous-x86_64.AppImage /usr/local/bin/linuxdeployqt</code></p><p>(3). 修改权限</p><p><code>chmod 777 linuxdeployqt </code></p><p>(4). 打印版本信息（检查是否正确安装）</p><p><code>linuxdeployqt -version</code></p><h2 id="2-准备：检查qmake"><a href="#2-准备：检查qmake" class="headerlink" title="2. 准备：检查qmake"></a><strong>2.</strong> 准备：检查qmake</h2><p>(1). 安装qtchooser</p><p><code>apt install qtchooser</code></p><p>(2). 修改default.conf</p><p><code>vim /usr/lib/x86_64-linux-gnu/qt-default/qtchooser/default.conf</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/opt/Qt5.14.2/5.14.2/gcc_64/bin</span><br><span class="line">/opt/Qt5.14.2/5.14.2/</span><br></pre></td></tr></table></figure><p>(3). 打印版本</p><p><code>qmake -v</code></p><h2 id="3-打包"><a href="#3-打包" class="headerlink" title="3. 打包"></a>3. 打包</h2><p>(1). 准备文件夹</p><p>准备一个文件夹，如<code>AppFolder</code>，将<code>qt-release</code>编译生成的可执行文件<code>TestAPP</code>，以及所用到的资源文件（图标、图片、DB文件等）放到<code>AppFolder</code>。</p><p>(2). 自动复制所需库文件</p><p>命令：<code>linuxdeployqt App -appimage</code>，报错执行3.3</p><p>(3). 编辑配置文件</p><p>执行<code>vim default.desktop</code>打开文件，在该文件末尾追加<code>Categories</code>（注意分号不可省略）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[Desktop Entry]</span><br><span class="line">Type=Application</span><br><span class="line">Name=TestAPP</span><br><span class="line">Exec=/usr/src/MyAPP/AppRun %F</span><br><span class="line">Icon=/usr/src/MyAPP/AppRun/images/logo.png</span><br><span class="line">Comment=Edit this default file</span><br><span class="line">Terminal=true</span><br><span class="line">Categories=Application;音视频播放器</span><br></pre></td></tr></table></figure><blockquote><p>desktop官方手册：<a href="https://help.ubuntu.com/community/UnityLaunchersAndDesktopFiles">https://help.ubuntu.com/community/UnityLaunchersAndDesktopFiles</a></p></blockquote><blockquote><p>在<code>Linux</code>系统中，<code>.desktop</code>文件就是用来运行程序的快捷方式，是一个包含程序信息的纯文本文件。</p><p><code>.desktop</code>文件以<code>UTF-8</code>编码，每一行由换行符分割。</p><p><code>.desktop</code>文件通常放在<code>~/.local/share/applications</code>或<code>/usr/share/applications</code>目录下。</p><p>通常，应用程序在安装后都会自动创建<code>.desktop</code>文件，如果是自己使用源代码编译得到的程序或者自己下载的压缩格式的应用，就需要打开终端执行其二进制文件，以及手动创建<code>.desktop</code>文件。</p><p>① 注释：以<code>#</code>开头</p><p>② 组：第一个组必须是<code>[Desktop Entry]</code>，其后跟随的<code>Key=Value</code>都属于该组，直到遇到下一个组为止；</p><p>③ 项：</p><ul><li><p>每一个项的格式均为<code>Key=Value</code>（<code>=</code>两边不能有空格，<code>Key</code>只能用<code>[A-Za-z0-9]</code>，不同组的<code>Key</code>可以同名）</p></li><li><p><code>Value</code>类型有<code>boolean</code>、<code>numberic</code>、<code>string</code>、<code>localestring</code>(用户可显示的用<code>UTF-8</code>的字符串)</p></li><li><p>键的本地化值</p></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Name=Foo</span><br><span class="line">Name[sr_YU]=...</span><br><span class="line">Name[sr@Latn]=...</span><br><span class="line">Name[sr]=...</span><br></pre></td></tr></table></figure><p>其通用Key为：(<a href="https://blog.csdn.net/u014025444/article/details/94024282">https://blog.csdn.net/u014025444/article/details/94024282</a>)</p><table><thead><tr><th>Key</th><th>描述</th><th>Value Type</th><th>是否必须</th><th>生效的Type</th></tr></thead><tbody><tr><td>Type</td><td>(1). Application<br />(2). Link<br />(3). Directory</td><td>string</td><td>1</td><td></td></tr><tr><td>Name</td><td>应用程序的特定名称</td><td>localstring</td><td>1</td><td></td></tr><tr><td>GenericName</td><td>应用程序的通用名称</td><td>localstring</td><td>0</td><td></td></tr><tr><td>Exec</td><td>执行路径（绝对路径）</td><td>string</td><td>0</td><td></td></tr><tr><td>TryExec</td><td>如果文件不存在, 则忽略该文件，并不在菜单中出现</td><td>string</td><td>0</td><td></td></tr><tr><td>URL</td><td>当Type&#x3D;Link时，可执行文件指向的URL</td><td>string</td><td>1</td><td>(2)</td></tr><tr><td>Comment</td><td>应用描述</td><td>localestring</td><td>0</td><td>1-3</td></tr><tr><td>Icon</td><td>应用图标(绝对路径, 或符合图标主题规范)</td><td>localestring</td><td>0</td><td></td></tr><tr><td>Path</td><td>当Type&#x3D;Application时，程序运行的目录</td><td>string</td><td>0</td><td>1</td></tr></tbody></table><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[Desktop Entry]</span><br><span class="line">Type=Application# </span><br><span class="line">Name=MyAPP# 应用名称</span><br><span class="line">Icon=/path/to/icon# 应用图标，绝对路径</span><br><span class="line">Exec=/path/to/AppRun# 可执行文件的路径，绝对路径</span><br><span class="line">Encoding=UTF-8</span><br><span class="line">Version=0.1.0</span><br><span class="line">Terminal=false</span><br></pre></td></tr></table></figure></blockquote><p>(4). 再次执行</p><p>执行<code>linuxdeployqt App -appimage</code>或<code>sudo linuxdeployqt Appname-appimage -unsupported-allow-new-glibc</code>，最终生成的<code>TestAPP</code>，即可执行。</p><blockquote><p>报错解决：若出现<code>xxx.so.1</code>不存在，需要手动拷贝<code>release</code>文件夹下生成的对应<code>so</code>文件，复制到<code>AppFloder</code>下的<code>lib</code>文件夹中。</p></blockquote><h2 id="4-打包为deb"><a href="#4-打包为deb" class="headerlink" title="4. 打包为deb"></a>4. 打包为deb</h2><p> <code>deb</code>是<code>Debian Linux</code>的软件包格式，通常是以编译源码的方式制作<code>deb</code>包，此处是以生成的发布文件夹的方式制作<code>deb</code>包。</p><p> (1). 准备工作</p><p>创建一个目录， 如<code>MyAPP</code>，自定义程序的安装路径为<code>/usr/src</code>（文件默认是释放到根目录下），并将之前生成的发布文件夹复制到<code>MyAPP/usr/src</code>下。</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> MyAPP</span><br><span class="line"><span class="built_in">cd</span> MyAPP</span><br><span class="line"><span class="built_in">mkdir</span> -p usr/src</span><br><span class="line">cp -a ~/AppFolder usr/src</span><br></pre></td></tr></table></figure><blockquote><p>注意：<code>desktop</code>文件中 <code>Exec</code> 和 <code>Icon</code> 必须要是<strong>绝对路径</strong>！</p></blockquote><p>(2). DEBIAN</p><p>在<code>MyAPP</code>下创建一个目录<code>DEBIAN</code>，在<code>DEBIAN</code>下创建一个<code>control</code>文件，并编写以下内容：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir DEBIAN</span><br><span class="line">cd DEBIAN</span><br><span class="line">vim control</span><br></pre></td></tr></table></figure><p>control</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">package: MyAPP</span><br><span class="line">Version: 1.0.1</span><br><span class="line">Section: utils</span><br><span class="line">Priority: optional</span><br><span class="line">Architecture: amd64</span><br><span class="line">Depends:</span><br><span class="line">Installed-Size: 4096</span><br><span class="line">Maintainer: Smith</span><br><span class="line">Description: MyAPP-deb</span><br></pre></td></tr></table></figure><p>postinst</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/sh</span><br><span class="line">chmod 777 /usr/src/MyAPP/MyAPP.desktop</span><br><span class="line">cp /usr/src/MyAPP/MyAPP.desktop /usr/share/applications/</span><br><span class="line">cp /usr/src/MyAPP/MyAPP.desktop ~/桌面/</span><br></pre></td></tr></table></figure><p>postrm</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/sh</span><br><span class="line">rm /usr/share/applications/MyAPP.desktop</span><br><span class="line">rm ~/桌面/MyAPP.desktop</span><br></pre></td></tr></table></figure><p>(3). 构建生成deb包</p><p>执行<code>dpkg -b . MyAPP.0.1_amd64.deb</code>，生成<code>deb</code>包，可以指定<code>deb</code>包的生成路径。</p><p>(4). 安装deb包</p><p>执行<code>dpkg -i MyAPP.0.1_amd64.deb</code>后，在<code>/usr/src</code>中会多出一个<code>MyAPP</code>目录，执行其中即可</p><p>(5). 卸载deb包</p><p><code>dpkg -r MyAPP</code></p><blockquote><p>安装失败时，重新安装会发生的问题：</p><p>问题一：子进程 xxx 已安装 pre-removal 脚本 返回了错误号 1 或 2 </p><p>解决方案：打开<code>gedit /var/lib/dpkg/status</code>,找到<code>Package: 包名</code>，将那一部分删除即可。</p></blockquote><h2 id="5-deb"><a href="#5-deb" class="headerlink" title="5. deb"></a>5. deb</h2><p>假设可程序程序名为<code>Player</code></p><p>用<code>dpkg</code>打包之前，需要将程序的安装路径<code>映射</code>到软件包的主目录下。</p><ul><li>如创建一个目录<code>PlayerDeb</code>，作为软件包的主目录；</li><li>假设要安装到目标计算机的<code>/usr/bin</code>目录中，就需要在<code>PlayerDeb</code>下创建对应目录，如<code>PlayerDeb/usr/bin</code>；</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">PlayerDeb# 主目录</span><br><span class="line">|-- usr</span><br><span class="line">    |-- bin# 存放可执行文件</span><br><span class="line">        |-- Player# 存放可执行程序</span><br><span class="line">    |-- share</span><br><span class="line">        |-- Player# 存放桌面文件和图标文件</span><br><span class="line">            |-- Player.desktop# 桌面文件（指定软件的运行路径和图标路径）</span><br><span class="line">            |-- Player.png</span><br><span class="line">|-- DEBIAN# 存放配置文件（control）和 4个脚本文件</span><br><span class="line">    |-- control# 配置文件：编写配置信息</span><br><span class="line">    |-- preinst# 脚本文件：安装时执行</span><br><span class="line">    |-- postinst# 脚本文件：安装完执行（如建立软链接，复制desktop文件到桌面等）</span><br><span class="line">    |-- prerm# 脚本文件：卸载时执行（如删除软链接，删除快捷方式等）</span><br><span class="line">    |-- postrm# 脚本文件：卸载后执行</span><br><span class="line">|-- opt</span><br><span class="line">    |-- apps</span><br><span class="line">        |-- Player# 软件安装目录</span><br><span class="line">            |-- program</span><br><span class="line">            |-- config</span><br><span class="line">|-- ./local/share/applications</span><br><span class="line">    |-- Player.desktop# 系统菜单项</span><br><span class="line">    </span><br><span class="line">        </span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="配置文件：control"><a href="#配置文件：control" class="headerlink" title="配置文件：control"></a>配置文件：control</h3><p>control文件在打包时需要调用，desktop文件就会出现在系统菜单中，便于用户启动。</p><p>control文件的基本配置项如下：</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">Package: Player<span class="comment"># 软件包名称</span></span><br><span class="line">Version: 1.0.0<span class="comment"># 软件包版本</span></span><br><span class="line">Description: This is a player deb package<span class="comment"># 软件包描述</span></span><br><span class="line">Maintainer: WonderThink<span class="comment"># 著作人信息（名称，联系方式，邮箱等）</span></span><br><span class="line">Architecture: amd64<span class="comment"># 软件包支持的架构平台（i386/amd64,m64k,sparc,alpha,powerpc,...）</span></span><br><span class="line">Section: utils<span class="comment"># 软件包类别（utils,net,mail,text,x11,...）</span></span><br><span class="line">Source:<span class="comment"># 软件包的源代码名称</span></span><br><span class="line">Priority: optional<span class="comment"># 软件包对系统的优先级（required,standard,optional,extra,...）</span></span><br><span class="line">Installed_Size: 20</span><br><span class="line">Depends:<span class="comment"># 软件依赖的其他软件包和库文件（多个用逗号隔开）</span></span><br><span class="line">Pre-Depends:<span class="comment"># 软件安装前必须安装或依赖的软件包和库文件</span></span><br><span class="line">Recommends:<span class="comment"># 推荐安装的其他软件包和库文件</span></span><br><span class="line">Suggests:<span class="comment"># 建议安装的其他软件包和库文件</span></span><br></pre></td></tr></table></figure><h3 id="桌面文件：Player-desktop"><a href="#桌面文件：Player-desktop" class="headerlink" title="桌面文件：Player.desktop"></a>桌面文件：Player.desktop</h3><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[Desktop Entry]</span></span><br><span class="line"><span class="attr">Name</span>=Player<span class="comment"># 程序名称</span></span><br><span class="line">Version: 1.0.0<span class="comment"># 程序版本号</span></span><br><span class="line">Comment: This is a player deb package<span class="comment"># 程序注释</span></span><br><span class="line"><span class="attr">Type</span>=Application<span class="comment"># 程序类型</span></span><br><span class="line"><span class="attr">Exec</span>=/usr/bin/Player<span class="comment"># 指定程序存放的路径</span></span><br><span class="line"><span class="attr">Icon</span>=/usr/share/Player/Player.png<span class="comment"># 指定图标存放的路径</span></span><br><span class="line"><span class="attr">Terminal</span>=<span class="literal">false</span><span class="comment"># 是否打开程序时同时打开终端</span></span><br></pre></td></tr></table></figure></div><script src="https://jsd.onmicrosoft.cn/npm/hexo-theme-a4@latest/source/js/lightgallery.min.js"></script><script>if("undefined"!=typeof lightGallery) {        var options1 = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options1);        }</script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2024/07/04/lambda%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
      <url>/2024/07/04/lambda%E8%A1%A8%E8%BE%BE%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://jsd.onmicrosoft.cn/npm/hexo-theme-a4@latest/source/css/lightgallery.min.css" /><div class=".article-gallery"><h1 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h1><p><code>Lambda</code>表达式，是<code>C++11</code>的一个重要特性；<br>它可以用来创建<code>匿名函数</code>，并可以作为<code>函数对象</code>来使用，以替代繁琐的函数声明和定义。</p><h1 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line">[capture list] (parameters) <span class="function"><span class="keyword">mutable</span> <span class="title">throw</span><span class="params">()</span> -&gt; <span class="keyword">return</span>-type </span>&#123; statement &#125;;</span><br><span class="line"></span><br><span class="line">[捕获列表] (参数列表) 可变规则 异常说明() -&gt; 返回类型 &#123; 函数体 &#125;</span><br></pre></td></tr></table></figure><h2 id="capture-list"><a href="#capture-list" class="headerlink" title="capture list"></a>capture list</h2><p>捕获列表，可以捕获当前函数作用域中的一个或多个局部变量（变量之间使用逗号隔开），在函数体中，可以访问或修改这些局部变量。<br>捕获方式分为3种：</p><ul><li><code>值捕获</code><ul><li>将局部变量以<code>const引用</code>形式传递到Lambda中，即Lambda<code>可以访问但无法修改</code>这些变量。</li><li>使用<code>=</code>可以将所有局部变量以<code>值捕获</code>形式传入到表达式中。<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> a = <span class="number">1</span>, b = <span class="number">2</span>;</span><br><span class="line"><span class="keyword">auto</span> func1 = [a, b] &#123; <span class="keyword">return</span> a + b; &#125;;</span><br><span class="line"><span class="keyword">auto</span> func2 = [=] &#123; <span class="keyword">return</span> a + b; &#125;;</span><br><span class="line"><span class="type">int</span> res1 = <span class="built_in">func1</span>();</span><br><span class="line"><span class="type">int</span> res2 = <span class="built_in">func1</span>();</span><br></pre></td></tr></table></figure></li></ul></li><li><code>引用捕获</code><ul><li>将局部变量以<code>引用</code>形式传递到Lambda中，即Lambda<code>可以访问也可以修改</code>这些变量。</li><li>使用<code>&amp;</code>可以将所有局部变量以<code>引用捕获</code>形式传入到Lambda表达式中。<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> a = <span class="number">1</span>, b = <span class="number">2</span>;</span><br><span class="line"><span class="keyword">auto</span> func1 = [&amp;a, &amp;b] &#123; a++; <span class="keyword">return</span> a + b; &#125;;</span><br><span class="line"><span class="keyword">auto</span> func2 = [&amp;] &#123; b++; <span class="keyword">return</span> a + b; &#125;;</span><br><span class="line"><span class="type">int</span> res1 = <span class="built_in">func1</span>();</span><br><span class="line"><span class="type">int</span> res2 = <span class="built_in">func2</span>();</span><br></pre></td></tr></table></figure></li></ul></li><li><code>混合捕获</code><ul><li>捕获列表中，既有<code>值捕获</code>的变量，也有<code>引用捕获</code>的变量。<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> a = <span class="number">1</span>, b = <span class="number">2</span>, c = <span class="number">3</span>, d = <span class="number">4</span>;</span><br><span class="line"><span class="keyword">auto</span> func1 = [=, &amp;a] &#123; a++; <span class="keyword">return</span> a + b + c;&#125; ;</span><br><span class="line"><span class="keyword">auto</span> func2 = [=, &amp;b, &amp;c] &#123; b++; c++; <span class="keyword">return</span> a + b + c; &#125;;</span><br><span class="line"><span class="keyword">auto</span> func3 = [&amp;, a, b] &#123; c++; <span class="keyword">return</span> a + b + c; &#125;;</span><br><span class="line"><span class="type">int</span> res1 = <span class="built_in">func1</span>();</span><br><span class="line"><span class="type">int</span> res2 = <span class="built_in">func2</span>();</span><br></pre></td></tr></table></figure></li></ul></li><li>其他捕获<ul><li><code>[]</code>：什么都不捕获；</li><li><code>[this]</code>：捕获<code>this</code>指针，<code>=</code> 和 <code>&amp;</code> 也能捕获this指针；</li></ul></li></ul><h2 id="参数列表"><a href="#参数列表" class="headerlink" title="参数列表"></a>参数列表</h2><p>Lambda可以传递捕获列表，也可以传递参数列表，用法和普通函数一致。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">auto</span> func = [](<span class="type">int</span> a, <span class="type">int</span> b) &#123; <span class="keyword">return</span> a + b; &#125;;</span><br><span class="line"><span class="type">int</span> res = <span class="built_in">func</span>(<span class="number">10</span>, <span class="number">20</span>);</span><br></pre></td></tr></table></figure><h2 id="限定符-mutable"><a href="#限定符-mutable" class="headerlink" title="限定符 mutable"></a>限定符 mutable</h2><p>限定符mutable，可以使Lambda在函数体内修改<code>值捕获</code>的变量；</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">auto</span> f1 = [a]() &#123;a++;&#125;;         <span class="comment">// error</span></span><br><span class="line"><span class="keyword">auto</span> f2 = [a]() <span class="keyword">mutable</span> &#123;a++;&#125;;</span><br></pre></td></tr></table></figure><h2 id="异常说明符-noexcept"><a href="#异常说明符-noexcept" class="headerlink" title="异常说明符 noexcept"></a>异常说明符 noexcept</h2><p>异常说明符noexcept，指定了Lambda不会抛出异常；</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><h2 id="返回值类型-type"><a href="#返回值类型-type" class="headerlink" title="返回值类型 -&gt;type"></a>返回值类型 -&gt;type</h2></div><script src="https://jsd.onmicrosoft.cn/npm/hexo-theme-a4@latest/source/js/lightgallery.min.js"></script><script>if("undefined"!=typeof lightGallery) {        var options1 = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options1);        }</script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2024/07/04/%E9%93%B6%E6%B2%B3%E9%BA%92%E9%BA%9FV10-%E6%8C%87%E4%BB%A4%E6%B1%87%E6%80%BB/"/>
      <url>/2024/07/04/%E9%93%B6%E6%B2%B3%E9%BA%92%E9%BA%9FV10-%E6%8C%87%E4%BB%A4%E6%B1%87%E6%80%BB/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://jsd.onmicrosoft.cn/npm/hexo-theme-a4@latest/source/css/lightgallery.min.css" /><div class=".article-gallery"><h2 id="首次安装：修改root密码"><a href="#首次安装：修改root密码" class="headerlink" title="首次安装：修改root密码"></a>首次安装：修改root密码</h2><p>终端输入<code>sudo passwd root</code>，旧密码就是登录系统的密码，而后设置新密码即可。</p><h2 id="设置默认为root用户"><a href="#设置默认为root用户" class="headerlink" title="设置默认为root用户"></a>设置默认为root用户</h2><p>终端输入<code>sudo vim /etc/lightdm/lightdm.conf</code>，修改<code>autologin-user</code>为<code>root</code>，保存后重启系统即可。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[SeatDefaults]</span><br><span class="line">autologin-guest=false</span><br><span class="line">autologin-user=root</span><br><span class="line">autologin-user-timeout=0</span><br></pre></td></tr></table></figure><h2 id="安装QTCreator"><a href="#安装QTCreator" class="headerlink" title="安装QTCreator"></a>安装QTCreator</h2><p>下载QT：<code>https://download.qt.io/archive/qt/</code>，进入对应版本的文件夹中，下载<code>.run</code>后缀的文件，如<code>qt-opensource-linux-x64-5.14.2.run</code><br>输入<code>./qt-opensource-linux-x64-5.14.2.run</code>安装（提前断网，可以跳过账户验证）</p></div><script src="https://jsd.onmicrosoft.cn/npm/hexo-theme-a4@latest/source/js/lightgallery.min.js"></script><script>if("undefined"!=typeof lightGallery) {        var options1 = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options1);        }</script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2024/07/04/%E9%93%B6%E6%B2%B3%E9%BA%92%E9%BA%9FV10%20%E6%89%93%E5%8D%B0%E6%9C%BA/"/>
      <url>/2024/07/04/%E9%93%B6%E6%B2%B3%E9%BA%92%E9%BA%9FV10%20%E6%89%93%E5%8D%B0%E6%9C%BA/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://jsd.onmicrosoft.cn/npm/hexo-theme-a4@latest/source/css/lightgallery.min.css" /><div class=".article-gallery"><p><code>ldq</code>:查看打印机列表<br>若显示打印进行中，需执行<code>ldadmin -x dsms</code>,删除打印机。重启电脑后，再添加。</p></div><script src="https://jsd.onmicrosoft.cn/npm/hexo-theme-a4@latest/source/js/lightgallery.min.js"></script><script>if("undefined"!=typeof lightGallery) {        var options1 = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options1);        }</script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2024/07/04/%E9%9F%B3%E8%A7%86%E9%A2%91-%E5%9F%BA%E7%A1%80%E6%A6%82%E5%BF%B5/"/>
      <url>/2024/07/04/%E9%9F%B3%E8%A7%86%E9%A2%91-%E5%9F%BA%E7%A1%80%E6%A6%82%E5%BF%B5/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://jsd.onmicrosoft.cn/npm/hexo-theme-a4@latest/source/css/lightgallery.min.css" /><div class=".article-gallery"><h2 id="I帧-P帧-B帧"><a href="#I帧-P帧-B帧" class="headerlink" title="I帧 P帧 B帧"></a>I帧 P帧 B帧</h2><p><code>I帧</code>：intra-coded picture，帧内编码帧，I帧通常是每个GOP的第一个帧，经过适度压缩，作为随机访问的参考点，可作为图像，即I帧可看作是一个图像经过压缩后的产物。</p><p><code>P帧</code>：predictive-frame，前向预测编码帧（预测帧），通过充分将低于图像序列中前面</p></div><script src="https://jsd.onmicrosoft.cn/npm/hexo-theme-a4@latest/source/js/lightgallery.min.js"></script><script>if("undefined"!=typeof lightGallery) {        var options1 = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options1);        }</script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2024/07/02/hello-world/"/>
      <url>/2024/07/02/hello-world/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://jsd.onmicrosoft.cn/npm/hexo-theme-a4@latest/source/css/lightgallery.min.css" /><div class=".article-gallery"><p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p></div><script src="https://jsd.onmicrosoft.cn/npm/hexo-theme-a4@latest/source/js/lightgallery.min.js"></script><script>if("undefined"!=typeof lightGallery) {        var options1 = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options1);        }</script>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
